{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\comment Begining font list}
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\comment begin colors}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}
{\comment Beginning style list}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 9;}
{\s50\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext51 List Continue 0;}
{\s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext52 List Continue 1;}
{\s52\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext53 List Continue 2;}
{\s53\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext54 List Continue 3;}
{\s54\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext55 List Continue 4;}
{\s55\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext56 List Continue 5;}
{\s56\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext57 List Continue 6;}
{\s57\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext58 List Continue 7;}
{\s58\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext59 List Continue 8;}
{\s59\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext59 List Continue 9;}
{\s60\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext61 DescContinue 0;}
{\s61\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext62 DescContinue 1;}
{\s62\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext63 DescContinue 2;}
{\s63\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext64 DescContinue 3;}
{\s64\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext65 DescContinue 4;}
{\s65\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext66 DescContinue 5;}
{\s66\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext67 DescContinue 6;}
{\s67\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext68 DescContinue 7;}
{\s68\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext69 DescContinue 8;}
{\s69\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext69 DescContinue 9;}
{\s70\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext81 LatexTOC 0;}
{\s71\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext82 LatexTOC 1;}
{\s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext83 LatexTOC 2;}
{\s73\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext84 LatexTOC 3;}
{\s74\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext85 LatexTOC 4;}
{\s75\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext86 LatexTOC 5;}
{\s76\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext87 LatexTOC 6;}
{\s77\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext88 LatexTOC 7;}
{\s78\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext89 LatexTOC 8;}
{\s79\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext89 LatexTOC 9;}
{\s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext81 \sautoupd List Bullet 0;}
{\s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid \sbasedon0 \snext82 \sautoupd List Bullet 1;}
{\s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid \sbasedon0 \snext83 \sautoupd List Bullet 2;}
{\s83\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls4\adjustright \fs20\cgrid \sbasedon0 \snext84 \sautoupd List Bullet 3;}
{\s84\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls5\adjustright \fs20\cgrid \sbasedon0 \snext85 \sautoupd List Bullet 4;}
{\s85\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls6\adjustright \fs20\cgrid \sbasedon0 \snext86 \sautoupd List Bullet 5;}
{\s86\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls7\adjustright \fs20\cgrid \sbasedon0 \snext87 \sautoupd List Bullet 6;}
{\s87\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls8\adjustright \fs20\cgrid \sbasedon0 \snext88 \sautoupd List Bullet 7;}
{\s88\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls9\adjustright \fs20\cgrid \sbasedon0 \snext89 \sautoupd List Bullet 8;}
{\s89\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls10\adjustright \fs20\cgrid \sbasedon0 \snext89 \sautoupd List Bullet 9;}
{\s90\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext91 \sautoupd List Enum 0;}
{\s91\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext92 \sautoupd List Enum 1;}
{\s92\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext93 \sautoupd List Enum 2;}
{\s93\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext94 \sautoupd List Enum 3;}
{\s94\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext95 \sautoupd List Enum 4;}
{\s95\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext96 \sautoupd List Enum 5;}
{\s96\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext96 \sautoupd List Enum 5;}
{\s97\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext98 \sautoupd List Enum 7;}
{\s98\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext99 \sautoupd List Enum 8;}
{\s99\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext99 \sautoupd List Enum 9;}
}
{\comment begin body}
{\info 
{\title {\comment DistributedMemory {\comment startProjectNumber }
 {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
1.0 \par
}{\comment endProjectNumber }
}DistributedMemory}
{\comment Generato daDoxgyen. }
{\creatim \yr2011\mo2\dy4\hr17\min36\sec39}
}{\comment end of infoblock}
\pard\plain 
\sectd\pgnlcrm
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}
{\comment begin title page}
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\vertalc\qc\par\par\par\par\par\par\par
\pard\plain \s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid 
{\field\fldedit {\*\fldinst TITLE \\*MERGEFORMAT}{\fldrslt TITLE}}\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\par
\par\par\par\par\par\par\par\par\par\par\par\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
{\field\fldedit {\*\fldinst AUTHOR \\*MERGEFORMAT}{\fldrslt AUTHOR}}\par
Version 1.0\par{\field\fldedit {\*\fldinst CREATEDATE \\*MERGEFORMAT}{\fldrslt CREATEDATE}}\par
\page\page{\comment End title page}
{\comment Table of contents}
\vertalt
\pard\plain 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Sommario\par
\pard\plain \par
{\field\fldedit {\*\fldinst TOC \\f \\*MERGEFORMAT}{\fldrslt Table of contents}}\par
\pard\plain 
{\comment Beginning Body of RTF Document}
\sect \sbkpage \pgndec \pgnrestart
\sect \sectd \sbknone
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}

{\comment BeginRTFChapter}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Indice delle strutture dati\par \pard\plain 
{\tc \v Indice delle strutture dati}
{\comment begin include annotated.rtf}
{\comment startTitleHead}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Strutture dati{\comment endTitleHead}
\par \pard\plain 
{\comment startTextBlock}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Queste sono le strutture dati con una loro breve descrizione:{\comment endTextBlock}
}
{\comment (startIndexList)}
{
\par
\pard\plain \s71\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\comment (startIndexKey)}
{\b {\b block}{\comment (endIndexKey)}
{\comment (startIndexValue)}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Struttura dati del blocco di memoria: {\b block} }{\comment (endIndexValue)}
)} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAN \\*MERGEFORMAT}{\fldrslt pagenum}}
{\comment (newParagraph)}
\par
{\comment (startIndexKey)}
{\b {\b block_list}{\comment (endIndexKey)}
{\comment (startIndexValue)}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Struttura dati del blocco di memoria: {\b block_list} }{\comment (endIndexValue)}
)} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAO \\*MERGEFORMAT}{\fldrslt pagenum}}
{\comment (newParagraph)}
\par
{\comment (startIndexKey)}
{\b {\b client_list}{\comment (endIndexKey)}
{\comment (startIndexValue)}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Struttura dati della lista di client associati al blocco: {\b client_list} }{\comment (endIndexValue)}
)} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAP \\*MERGEFORMAT}{\fldrslt pagenum}}
{\comment (newParagraph)}
\par
{\comment (startIndexKey)}
{\b {\b Library}{\comment (endIndexKey)}
{\comment (startIndexValue)}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classe {\b Library} }{\comment (endIndexValue)}
)} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAQ \\*MERGEFORMAT}{\fldrslt pagenum}}
{\comment (newParagraph)}
\par
{\comment (startIndexKey)}
{\b {\b Server}{\comment (endIndexKey)}
{\comment (startIndexValue)}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classe {\b Server} }{\comment (endIndexValue)}
)} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAR \\*MERGEFORMAT}{\fldrslt pagenum}}
{\comment (newParagraph)}
\par
{\comment (startIndexKey)}
{\b {\b server_list}{\comment (endIndexKey)}
{\comment (startIndexValue)}
 ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Struttura dati della lista di server: {\b server_list} }{\comment (endIndexValue)}
)} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAS \\*MERGEFORMAT}{\fldrslt pagenum}}
{\comment (newParagraph)}
\par
{\comment (endIndexList)}
\par}{\comment endFile}
{\comment end include annotated.rtf}

{\comment BeginRTFChapter}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Indice dei file\par \pard\plain 
{\tc \v Indice dei file}
{\comment begin include files.rtf}
{\comment startTitleHead}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Elenco dei file{\comment endTitleHead}
\par \pard\plain 
{\comment startTextBlock}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Questo \'E8\'20un elenco di tutti i file con una loro breve descrizione:{\comment endTextBlock}
}
{\comment (startIndexList)}
{
\par
\pard\plain \s71\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\comment (startIndexKey)}
{\b {\b client_library.h}{\comment (endIndexKey)}
{\comment (startIndexValue)}
 {\comment (endIndexValue)}
} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAA \\*MERGEFORMAT}{\fldrslt pagenum}}
{\comment (newParagraph)}
\par
{\comment (startIndexKey)}
{\b {\b server.h}{\comment (endIndexKey)}
{\comment (startIndexValue)}
 {\comment (endIndexValue)}
} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAE \\*MERGEFORMAT}{\fldrslt pagenum}}
{\comment (newParagraph)}
\par
{\comment (endIndexList)}
\par}{\comment endFile}
{\comment end include files.rtf}

{\comment BeginRTFChapter}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Documentazione delle classi{\tc \v Documentazione delle classi}
\par \pard\plain 
{\comment begin include structblock.rtf}
{\comment startTitleHead}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Riferimenti per la struct block{\comment endTitleHead}
\par \pard\plain 
{\tc\tcl2 \v block}
{\xe \v block}
{\comment writeAnchor (structblock)}
{\bkmkstart AAAAAAAAAN}
{\bkmkend AAAAAAAAAN}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Struttura dati del blocco di memoria: {\b block}. \par
}{\f2 #include <server.h>}{\comment (newParagraph)}
\par
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Campi{\comment endGroupHeader}
\par
\pard\plain 

{\comment (startMemberList) }
{
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b ID}{\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (startMemberDescription)}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ID del blocco allocato in memoria. \par
}{\comment (endMemberDescription)}
}}
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void * {\b pointer}{\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (startMemberDescription)}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Puntatore alla prima cella di memoria in cui \'E8\'20memorizzato il blocco. \par
}{\comment (endMemberDescription)}
}}
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
pthread_mutex_t {\b b_acc}{\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (startMemberDescription)}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Semaforo per la gestione della mutua esclusione sul blocco. \par
}{\comment (endMemberDescription)}
}}
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b client_list} * {\b cl_ptr}{\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (startMemberDescription)}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Puntatore alla testa della lista dei client connessi al server. \par
}{\comment (endMemberDescription)}
}}
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b block} * {\b succ}{\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (startMemberDescription)}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Puntatore al blocco successivo. \par
}{\comment (endMemberDescription)}
}}
{\comment (endMemberList) }
}
{\comment (rtfwriteRuler_thin)}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descrizione dettagliata{\comment endGroupHeader}
\par
\pard\plain 
{\comment startTextBlock}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Struttura dati del blocco di memoria: {\b block}. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
La struttura dati contiene l'ID del blocco allocato in memoria, il puntatore alla prima cella di memoria in cui \'E8\'20memorizzato il blocco, il semaforo per la gestione della mutua esclusione sul blocco, il puntatore alla testa della lista dei client connessi al server, il puntatore al blocco successivo. \par
}{\comment endTextBlock}
}
{\comment (rtfwriteRuler_thin)}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentazione dei campi{\comment endGroupHeader}
\par
\pard\plain 
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v ID\:block}
{\xe \v block\:ID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b block::ID}{\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAAT}
{\bkmkend AAAAAAAAAT}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ID del blocco allocato in memoria. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v pointer\:block}
{\xe \v block\:pointer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void* {\b block::pointer}{\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAAU}
{\bkmkend AAAAAAAAAU}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Puntatore alla prima cella di memoria in cui \'E8\'20memorizzato il blocco. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v b_acc\:block}
{\xe \v block\:b_acc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
pthread_mutex_t {\b block::b_acc}{\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAAV}
{\bkmkend AAAAAAAAAV}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Semaforo per la gestione della mutua esclusione sul blocco. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v cl_ptr\:block}
{\xe \v block\:cl_ptr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b client_list}* {\b block::cl_ptr}{\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAAW}
{\bkmkend AAAAAAAAAW}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Puntatore alla testa della lista dei client connessi al server. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v succ\:block}
{\xe \v block\:succ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b block}* {\b block::succ}{\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAAX}
{\bkmkend AAAAAAAAAX}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Puntatore al blocco successivo. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\comment (rtfwriteRuler_thin)}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
La documentazione per questa struct \'E8\'20stata generata a partire dal seguente file:{\comment (startItemList level=0) }
{{\comment (writeListItem)}
{\comment (newParagraph)}
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b server.h}{\comment (newParagraph)}
\par
{\comment (endItemList level=1)}
}{\comment endFile}
{\comment end include structblock.rtf}
\par \pard\plain 

{\comment BeginRTFSection}
\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
{\comment begin include structblock__list.rtf}
{\comment startTitleHead}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Riferimenti per la struct block_list{\comment endTitleHead}
\par \pard\plain 
{\tc\tcl2 \v block_list}
{\xe \v block_list}
{\comment writeAnchor (structblock__list)}
{\bkmkstart AAAAAAAAAO}
{\bkmkend AAAAAAAAAO}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Struttura dati del blocco di memoria: {\b block_list}. \par
}{\f2 #include <client_library.h>}{\comment (newParagraph)}
\par
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Campi{\comment endGroupHeader}
\par
\pard\plain 

{\comment (startMemberList) }
{
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b ID}{\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (startMemberDescription)}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ID del blocco di memoria. \par
}{\comment (endMemberDescription)}
}}
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void * {\b pointer}{\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (startMemberDescription)}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Puntatore alla prima cella di memoria in cui \'E8\'20memorizzato il blocco. \par
}{\comment (endMemberDescription)}
}}
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b associated}{\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (startMemberDescription)}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Variabile per gestire l'associazione tra blocco di memoria e indirizzo di memoria locale. \par
}{\comment (endMemberDescription)}
}}
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b block_list} * {\b succ}{\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (startMemberDescription)}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Puntatore al blocco successivo. \par
}{\comment (endMemberDescription)}
}}
{\comment (endMemberList) }
}
{\comment (rtfwriteRuler_thin)}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descrizione dettagliata{\comment endGroupHeader}
\par
\pard\plain 
{\comment startTextBlock}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Struttura dati del blocco di memoria: {\b block_list}. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
La struttura dati contiene l'ID del blocco di memoria, il puntatore alla prima cella di memoria in cui \'E8\'20memorizzato il blocco, la variabile booleana per gestire l'associazione tra blocco di memoria e indirizzo di memoria locale, il puntatore al blocco successivo. \par
}{\comment endTextBlock}
}
{\comment (rtfwriteRuler_thin)}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentazione dei campi{\comment endGroupHeader}
\par
\pard\plain 
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v ID\:block_list}
{\xe \v block_list\:ID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b block_list::ID}{\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAAY}
{\bkmkend AAAAAAAAAY}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ID del blocco di memoria. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v pointer\:block_list}
{\xe \v block_list\:pointer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void* {\b block_list::pointer}{\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAAZ}
{\bkmkend AAAAAAAAAZ}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Puntatore alla prima cella di memoria in cui \'E8\'20memorizzato il blocco. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v associated\:block_list}
{\xe \v block_list\:associated}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool {\b block_list::associated}{\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAABA}
{\bkmkend AAAAAAAABA}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Variabile per gestire l'associazione tra blocco di memoria e indirizzo di memoria locale. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v succ\:block_list}
{\xe \v block_list\:succ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b block_list}* {\b block_list::succ}{\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAABB}
{\bkmkend AAAAAAAABB}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Puntatore al blocco successivo. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\comment (rtfwriteRuler_thin)}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
La documentazione per questa struct \'E8\'20stata generata a partire dal seguente file:{\comment (startItemList level=0) }
{{\comment (writeListItem)}
{\comment (newParagraph)}
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b client_library.h}{\comment (newParagraph)}
\par
{\comment (endItemList level=1)}
}{\comment endFile}
{\comment end include structblock__list.rtf}
\par \pard\plain 

{\comment BeginRTFSection}
\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
{\comment begin include structclient__list.rtf}
{\comment startTitleHead}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Riferimenti per la struct client_list{\comment endTitleHead}
\par \pard\plain 
{\tc\tcl2 \v client_list}
{\xe \v client_list}
{\comment writeAnchor (structclient__list)}
{\bkmkstart AAAAAAAAAP}
{\bkmkend AAAAAAAAAP}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Struttura dati della lista di client associati al blocco: {\b client_list}. \par
}{\f2 #include <server.h>}{\comment (newParagraph)}
\par
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Campi{\comment endGroupHeader}
\par
\pard\plain 

{\comment (startMemberList) }
{
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b cl_ID}{\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (startMemberDescription)}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Identificativo del client. \par
}{\comment (endMemberDescription)}
}}
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b valid}{\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (startMemberDescription)}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Variabile per la gestione della validit\'E0\'20del blocco associato al client. \par
}{\comment (endMemberDescription)}
}}
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b lock}{\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (startMemberDescription)}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Variabile per la gestione del client in attesa che la copia locale diventi valida. \par
}{\comment (endMemberDescription)}
}}
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b client_list} * {\b succ}{\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (startMemberDescription)}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Puntatore al client successivo connesso al server. \par
}{\comment (endMemberDescription)}
}}
{\comment (endMemberList) }
}
{\comment (rtfwriteRuler_thin)}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descrizione dettagliata{\comment endGroupHeader}
\par
\pard\plain 
{\comment startTextBlock}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Struttura dati della lista di client associati al blocco: {\b client_list}. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
La struttura dati contiene l'identificativo del client, la variabile booleana per la gestione della validit\'E0\'20del blocco associato al client, la variabile booleana per la gestione del client in attesa che la copia locale diventi valida, il puntatore al client successivo connesso al server. \par
}{\comment endTextBlock}
}
{\comment (rtfwriteRuler_thin)}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentazione dei campi{\comment endGroupHeader}
\par
\pard\plain 
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v cl_ID\:client_list}
{\xe \v client_list\:cl_ID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b client_list::cl_ID}{\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAABC}
{\bkmkend AAAAAAAABC}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Identificativo del client. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v valid\:client_list}
{\xe \v client_list\:valid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool {\b client_list::valid}{\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAABD}
{\bkmkend AAAAAAAABD}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Variabile per la gestione della validit\'E0\'20del blocco associato al client. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v lock\:client_list}
{\xe \v client_list\:lock}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool {\b client_list::lock}{\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAABE}
{\bkmkend AAAAAAAABE}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Variabile per la gestione del client in attesa che la copia locale diventi valida. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v succ\:client_list}
{\xe \v client_list\:succ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b client_list}* {\b client_list::succ}{\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAABF}
{\bkmkend AAAAAAAABF}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Puntatore al client successivo connesso al server. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\comment (rtfwriteRuler_thin)}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
La documentazione per questa struct \'E8\'20stata generata a partire dal seguente file:{\comment (startItemList level=0) }
{{\comment (writeListItem)}
{\comment (newParagraph)}
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b server.h}{\comment (newParagraph)}
\par
{\comment (endItemList level=1)}
}{\comment endFile}
{\comment end include structclient__list.rtf}
\par \pard\plain 

{\comment BeginRTFSection}
\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
{\comment begin include classLibrary.rtf}
{\comment startTitleHead}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Riferimenti per la classe Library{\comment endTitleHead}
\par \pard\plain 
{\tc\tcl2 \v Library}
{\xe \v Library}
{\comment writeAnchor (classLibrary)}
{\bkmkstart AAAAAAAAAQ}
{\bkmkend AAAAAAAAAQ}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classe {\b Library}. \par
}{\f2 #include <client_library.h>}{\comment (newParagraph)}
\par
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membri pubblici{\comment endGroupHeader}
\par
\pard\plain 

{\comment (startMemberList) }
{
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Library} (){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (startMemberDescription)}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Library()}: costruttore della classe {\b Library}. \par
}{\comment (endMemberDescription)}
}}
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b dm_init} (char *config_file){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (startMemberDescription)}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
void {\b dm_init(char* config_file)}: funzione pubblica che inizializza la libreria. \par
}{\comment (endMemberDescription)}
}}
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b dm_block_map} (int ID, void *address){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (startMemberDescription)}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
int {\b dm_block_map(int ID, void* address)}: funzione pubblica che stabilisce l'associazione tra blocco di memoria e indirizzo di memoria locale. \par
}{\comment (endMemberDescription)}
}}
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b dm_block_unmap} (int ID){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (startMemberDescription)}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
void {\b dm_block_unmap(int ID)}: funzione pubblica che segnala al server che il client non \'E8\'20pi\'F9\'20interessato al blocco ID. \par
}{\comment (endMemberDescription)}
}}
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b dm_block_update} (int ID){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (startMemberDescription)}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
int {\b dm_block_update(int ID)}: funzione pubblica che aggiorna il contenuto della copia locale con il contenuto globale sul server. \par
}{\comment (endMemberDescription)}
}}
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b dm_block_write} (int ID){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (startMemberDescription)}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
int {\b dm_block_write(int ID)}: funzione pubblica che sincronizza il contenuto locale del blocco con il contenuto globale sul server. \par
}{\comment (endMemberDescription)}
}}
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b dm_block_wait} (int ID){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (startMemberDescription)}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
int {\b dm_block_wait(int ID)}: funzione pubblica che controlla la validit\'E0\'20della copia locale del blocco. \par
}{\comment (endMemberDescription)}
}}
{\comment (endMemberList) }
}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membri privati{\comment endGroupHeader}
\par
\pard\plain 

{\comment (startMemberList) }
{
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b server_list} * {\b find_server} (int id){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (startMemberDescription)}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b server_list} * {\b find_server(int id)}: funzione privata che restituisce il server contenente il blocco identificato da id. \par
}{\comment (endMemberDescription)}
}}
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b block_list} * {\b find_block} (int id, {\b server_list} *sl){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (startMemberDescription)}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b block_list} * {\b find_block(int id, server_list *sl)}: funzione privata che restituisce il blocco identificato da id. \par
}{\comment (endMemberDescription)}
}}
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b create_socket} (){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (startMemberDescription)}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
void {\b create_socket()}: funzione privata che crea i socket necessari per mettersi in connessione con i server. \par
}{\comment (endMemberDescription)}
}}
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b client_connect} (char *ip_add, int port, int cl_sk, {\b server_list} *sl){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (startMemberDescription)}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
int {\b client_connect(char *ip_add, int port, int cl_sk, server_list *sl)}: funzione privata che effettua la connessione del client al server. \par
}{\comment (endMemberDescription)}
}}
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b read_config_file} (char *config_file){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (startMemberDescription)}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
void {\b read_config_file(char* config_file)}: funzione privata che legge il file di configurazione. \par
}{\comment (endMemberDescription)}
}}
{\comment (endMemberList) }
}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Attributi privati{\comment endGroupHeader}
\par
\pard\plain 

{\comment (startMemberList) }
{
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b server_list} * {\b head}{\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (startMemberDescription)}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Puntatore alla testa della lista dei server. \par
}{\comment (endMemberDescription)}
}}
{\comment (endMemberList) }
}
{\comment (rtfwriteRuler_thin)}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descrizione dettagliata{\comment endGroupHeader}
\par
\pard\plain 
{\comment startTextBlock}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classe {\b Library}. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
La classe implementa le strutture dati e le funzioni di interfaccia richieste dalle specifiche. Utilizza, inoltre, diverse funzioni private per svolgere le operazioni necessarie ai metodi richiesti. \par
}{\comment endTextBlock}
}
{\comment (rtfwriteRuler_thin)}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentazione dei costruttori e dei distruttori{\comment endGroupHeader}
\par
\pard\plain 
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v Library\:Library}
{\xe \v Library\:Library}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Library::Library (){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAABG}
{\bkmkend AAAAAAAABG}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Library()}: costruttore della classe {\b Library}. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Il costruttore inizializza il puntatore alla testa della lista dei server a NULL. \par
}}
{\comment (rtfwriteRuler_thin)}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentazione delle funzioni membro{\comment endGroupHeader}
\par
\pard\plain 
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v find_server\:Library}
{\xe \v Library\:find_server}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b server_list}* Library::find_server ({\comment (startParameterList)}
int {\i id}){\f2  [private]}{\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAABH}
{\bkmkend AAAAAAAABH}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b server_list} * {\b find_server(int id)}: funzione privata che restituisce il server contenente il blocco identificato da id. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
La funzione scorre la lista di server, contestualmente scorre la lista di blocchi appesi al server e restiuisce il puntatore al server che contiene il blocco che ha id come identificativo. Restituisce NULL se il server non \'E8\'20presente in lista. \par
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v find_block\:Library}
{\xe \v Library\:find_block}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b block_list}* Library::find_block ({\comment (startParameterList)}
int {\i id}, {\comment (startParameterList)}
  {\b server_list} * {\i sl}){\f2  [private]}{\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAABI}
{\bkmkend AAAAAAAABI}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b block_list} * {\b find_block(int id, server_list *sl)}: funzione privata che restituisce il blocco identificato da id. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
La funzione scorre la lista di blocchi appesi al server puntato da sl e restituisce il puntatore al blocco identificato da id. Restituisce NULL se il blocco non \'E8\'20presente in lista. \par
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v create_socket\:Library}
{\xe \v Library\:create_socket}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Library::create_socket (){\f2  [private]}{\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAABJ}
{\bkmkend AAAAAAAABJ}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
void {\b create_socket()}: funzione privata che crea i socket necessari per mettersi in connessione con i server. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
La funzione scorre la lista di server e crea un socket per ogni elemento presente in lista. \par
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v client_connect\:Library}
{\xe \v Library\:client_connect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Library::client_connect ({\comment (startParameterList)}
char * {\i ip_add}, {\comment (startParameterList)}
  int {\i port}, {\comment (startParameterList)}
  int {\i cl_sk}, {\comment (startParameterList)}
  {\b server_list} * {\i sl}){\f2  [private]}{\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAABK}
{\bkmkend AAAAAAAABK}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
int {\b client_connect(char *ip_add, int port, int cl_sk, server_list *sl)}: funzione privata che effettua la connessione del client al server. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
La funzione inizializza le strutture dati necessarie , effettua la connessione verso il server avente indirizo IP ip_add e porta port, setta la variabile booleana connected a 1. La funzione ritorna 1 in caso di successo e -1 in caso di errore. \par
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v read_config_file\:Library}
{\xe \v Library\:read_config_file}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Library::read_config_file ({\comment (startParameterList)}
char * {\i config_file}){\f2  [private]}{\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAABL}
{\bkmkend AAAAAAAABL}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
void {\b read_config_file(char* config_file)}: funzione privata che legge il file di configurazione. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
La funzione legge il contenuto del file di configurazione, crea la lista di server in base al numero di righe presenti nel file effettuando l'inserimento di ogni nuovo elemento in testa, per ogni elemento della lista di server crea una lista di blocchi associati al server in base ai blocchi presenti nel file di configurazione effettuando l'inserimento di ogni nuovo elemento in testa, inizializza le variabili della struttura relativa al blocco per ogni elemento della lista di blocchi. \par
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v dm_init\:Library}
{\xe \v Library\:dm_init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Library::dm_init ({\comment (startParameterList)}
char * {\i config_file}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAABM}
{\bkmkend AAAAAAAABM}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
void {\b dm_init(char* config_file)}: funzione pubblica che inizializza la libreria. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
La funzione carica dal file config_file l'associazione tra ID dei blocchi e server richiamando la read_config_file, apre una serie di socket per permettere al client di mettersi in connessione con i server richiamando la create_socket. \par
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v dm_block_map\:Library}
{\xe \v Library\:dm_block_map}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Library::dm_block_map ({\comment (startParameterList)}
int {\i ID}, {\comment (startParameterList)}
  void * {\i address}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAABN}
{\bkmkend AAAAAAAABN}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
int {\b dm_block_map(int ID, void* address)}: funzione pubblica che stabilisce l'associazione tra blocco di memoria e indirizzo di memoria locale. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
La funzione trova il server che contiene il blocco ID richiamando la find_server, trova il blocco interessato richiamando la find_block, effettua un controllo sulla variabile booleana connected e se il client non risulta connesso al server, effettua la connessione richiamando la client_connect. Successivamente invia il comando relativo all'operazione dal svolgere al server, invia l'ID del blocco interessato al server, richiede la copia del blocco a partire dall'indirizzo address, segnala che il blocco \'E8\'20associato ad un indirizzo di memoria locale settando la variabile booleana associated a 1. La funzione restituisce 1 in caso di successo e -1 in caso di errore (non \'E8\'20possibile effettuare la connessione, il server non risponde, il blocco \'E8\'20gia associato ad un altro indirizzo di memoria locale). \par
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v dm_block_unmap\:Library}
{\xe \v Library\:dm_block_unmap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Library::dm_block_unmap ({\comment (startParameterList)}
int {\i ID}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAABO}
{\bkmkend AAAAAAAABO}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
void {\b dm_block_unmap(int ID)}: funzione pubblica che segnala al server che il client non \'E8\'20pi\'F9\'20interessato al blocco ID. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
La funzione trova il server che contiene il blocco ID richiamando la find_server, trova il blocco interessato richiamando la find_block, invia il comando relativo all'operazione dal svolgere al server, invia l'ID del blocco interessato al server, segnala che il blocco non \'E8\'20pi\'F9\'20associato ad un indirizzo di memoria locale resettando la variabile boolena associated a 0. La funzione fallisce se il blocco non era stato preventivamente associato ad un indirizzo di memoria locale. \par
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v dm_block_update\:Library}
{\xe \v Library\:dm_block_update}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Library::dm_block_update ({\comment (startParameterList)}
int {\i ID}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAABP}
{\bkmkend AAAAAAAABP}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
int {\b dm_block_update(int ID)}: funzione pubblica che aggiorna il contenuto della copia locale con il contenuto globale sul server. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
La funzione trova il server che contiene il blocco ID richiamando la find_server, trova il blocco interessato richiamando la find_block, invia il comando relativo all'operazione dal svolgere al server, invia l'ID del blocco interessato al server, riceve il controllo sulla validit\'E0\'20della copia locale del blocco dal server e se la copia locale risulta ancora valida non effettua alcuna copia, altrimenti, aggiorna il contenuto della copia locale con quello della copia globale. La funzione restituisce 1 in caso di successo e -1 in caso di errore (il server non risponde, il blocco non era stato associato ad alcun indirizzo di memoria locale). \par
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v dm_block_write\:Library}
{\xe \v Library\:dm_block_write}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Library::dm_block_write ({\comment (startParameterList)}
int {\i ID}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAABQ}
{\bkmkend AAAAAAAABQ}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
int {\b dm_block_write(int ID)}: funzione pubblica che sincronizza il contenuto locale del blocco con il contenuto globale sul server. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
La funzione trova il server che contiene il blocco ID richiamando la find_server, trova il blocco interessato richiamando la find_block, invia il comando relativo all'operazione dal svolgere al server, invia l'ID del blocco interessato al server, riceve il controllo sulla validit\'E0\'20della copia locale del blocco dal server e se la copia locale risulta valida sincronizza il contenuto locale del blocco con il contenuto globale sul server. La funzione ritorna con errore (con codici di errori diversi) nel caso in cui il blocco non era stato associato ad alcun indirizzo di memoria locale, la copia locale del blocco risulta invalida, il server non risponde. La funzione restituisce 1 in caso di successo. \par
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v dm_block_wait\:Library}
{\xe \v Library\:dm_block_wait}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Library::dm_block_wait ({\comment (startParameterList)}
int {\i ID}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAABR}
{\bkmkend AAAAAAAABR}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
int {\b dm_block_wait(int ID)}: funzione pubblica che controlla la validit\'E0\'20della copia locale del blocco. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
La funzione trova il server che contiene il blocco ID richiamando la find_server, trova il blocco interessato richiamando la find_block, invia il comando relativo all'operazione dal svolgere al server, invia l'ID del blocco interessato al server, riceve il controllo sulla validit\'E0\'20della copia locale del blocco dal server e se la copia locale risulta invalida ritorna immediatamente, altrimenti, resta in attesa di ricevere dal server il segnale che notifica che la copia locale \'E8\'20diventata invalida. La funzione restituisce 1 in caso di successo e -1 in caso di errore (il server non risponde, il blocco non era stato associato ad alcun indirizzo di memoria locale). \par
}}
{\comment (rtfwriteRuler_thin)}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentazione dei campi{\comment endGroupHeader}
\par
\pard\plain 
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v head\:Library}
{\xe \v Library\:head}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b server_list}* {\b Library::head}{\f2  [private]}{\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAABS}
{\bkmkend AAAAAAAABS}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Puntatore alla testa della lista dei server. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\comment (rtfwriteRuler_thin)}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
La documentazione per questa classe \'E8\'20stata generata a partire dal seguente file:{\comment (startItemList level=0) }
{{\comment (writeListItem)}
{\comment (newParagraph)}
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b client_library.h}{\comment (newParagraph)}
\par
{\comment (endItemList level=1)}
}{\comment endFile}
{\comment end include classLibrary.rtf}
\par \pard\plain 

{\comment BeginRTFSection}
\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
{\comment begin include classServer.rtf}
{\comment startTitleHead}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Riferimenti per la classe Server{\comment endTitleHead}
\par \pard\plain 
{\tc\tcl2 \v Server}
{\xe \v Server}
{\comment writeAnchor (classServer)}
{\bkmkstart AAAAAAAAAR}
{\bkmkend AAAAAAAAAR}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classe {\b Server}. \par
}{\f2 #include <server.h>}{\comment (newParagraph)}
\par
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membri pubblici{\comment endGroupHeader}
\par
\pard\plain 

{\comment (startMemberList) }
{
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Server} (){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (startMemberDescription)}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Server()}: costruttore della classe {\b Server}. \par
}{\comment (endMemberDescription)}
}}
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b port_control} (int port){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (startMemberDescription)}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
int {\b port_control(int port)}: funzione pubblica che effettua il controllo sulla porta associata al server. \par
}{\comment (endMemberDescription)}
}}
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b read_config_file} (const char *config_file){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (startMemberDescription)}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b read_config_file(const char *config_file)}: funzione pubblica che legge il file di configurazione. \par
}{\comment (endMemberDescription)}
}}
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b block_map} (int sk){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (startMemberDescription)}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
int {\b block_map(int sk)}: funzione pubblica che stabilisce l'associazione tra client e blocco. \par
}{\comment (endMemberDescription)}
}}
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b block_unmap} (int sk){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (startMemberDescription)}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
int {\b block_unmap(int sk)}: funzione pubblica che cancella l'associazione tra client e blocco. \par
}{\comment (endMemberDescription)}
}}
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b block_update} (int sk){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (startMemberDescription)}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
int {\b block_update(int sk)}: funzione pubblica che invia il contenuto del blocco al client. \par
}{\comment (endMemberDescription)}
}}
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b block_write} (int sk){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (startMemberDescription)}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
int {\b block_write(int sk)}: funzione pubblica che aggiorna il contenuto della copia globale del blocco con quello della copia locale. \par
}{\comment (endMemberDescription)}
}}
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b block_wait} (int sk){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (startMemberDescription)}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
int {\b block_wait(int sk)}: funzione pubblica che controlla la validit\'E0\'20della copia locale del blocco. \par
}{\comment (endMemberDescription)}
}}
{\comment (endMemberList) }
}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membri privati{\comment endGroupHeader}
\par
\pard\plain 

{\comment (startMemberList) }
{
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b add_block} (int id_block){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (startMemberDescription)}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
void {\b add_block(int id_block)}: funzione privata che crea e inserisce un nuovo blocco in lista. \par
}{\comment (endMemberDescription)}
}}
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b block} * {\b find_block} (int id){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (startMemberDescription)}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b block} * {\b find_block(int id)}: funzione privata che restituisce il blocco identificato da id. \par
}{\comment (endMemberDescription)}
}}
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b client_list} * {\b find_client} (int client_id, {\b block} *bk_elem){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (startMemberDescription)}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b client_list} * {\b find_client(int client_id, block* bk_elem)}: funzione privata che restituisce il client identificato da client_id. \par
}{\comment (endMemberDescription)}
}}
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b add_client} (int client_id, {\b block} *bk_elem){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (startMemberDescription)}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
void {\b add_client(int client_id, block *bk_elem)}: funzione privata che crea e inserisce un nuovo client in lista. \par
}{\comment (endMemberDescription)}
}}
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b delete_client} (int client_id, {\b block} *bk_elem){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (startMemberDescription)}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
void {\b delete_client(int client_id, block *bk_elem)}: funzione privata che elimina un client dalla lista di client. \par
}{\comment (endMemberDescription)}
}}
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b change_valid} (int client_id, {\b block} *bk_elem){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (startMemberDescription)}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
void {\b change_valid(int client_id, block *bk_elem)}: funzione privata che modifica la validit\'E0\'20della copia locale del blocco. \par
}{\comment (endMemberDescription)}
}}
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b client_unblock} (int client_id, {\b block} *bk_elem){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (startMemberDescription)}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
int {\b client_unblock(int client_id, block *bk_elem)}: funzione privata che sblocca la wait. \par
}{\comment (endMemberDescription)}
}}
{\comment (endMemberList) }
}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Attributi privati{\comment endGroupHeader}
\par
\pard\plain 

{\comment (startMemberList) }
{
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b block} * {\b head}{\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (startMemberDescription)}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Puntatore alla testa della lista di blocchi. \par
}{\comment (endMemberDescription)}
}}
{\comment (endMemberList) }
}
{\comment (rtfwriteRuler_thin)}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descrizione dettagliata{\comment endGroupHeader}
\par
\pard\plain 
{\comment startTextBlock}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classe {\b Server}. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
La classe server implementa le strutture dati e i metodi richiesti dalle specifiche lato server. Utilizza, inoltre, diverse funzioni private per svolgere le operazioni necessarie ai metodi richiesti. \par
}{\comment endTextBlock}
}
{\comment (rtfwriteRuler_thin)}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentazione dei costruttori e dei distruttori{\comment endGroupHeader}
\par
\pard\plain 
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v Server\:Server}
{\xe \v Server\:Server}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Server::Server (){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAABT}
{\bkmkend AAAAAAAABT}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Server()}: costruttore della classe {\b Server}. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Il costruttore inizializza il puntatore alla testa della lista di blocchi a NULL. \par
}}
{\comment (rtfwriteRuler_thin)}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentazione delle funzioni membro{\comment endGroupHeader}
\par
\pard\plain 
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v add_block\:Server}
{\xe \v Server\:add_block}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Server::add_block ({\comment (startParameterList)}
int {\i id_block}){\f2  [private]}{\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAABU}
{\bkmkend AAAAAAAABU}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
void {\b add_block(int id_block)}: funzione privata che crea e inserisce un nuovo blocco in lista. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
La funzione crea la lista di blocchi effetuando l'inserimento di un nuovo elemento in testa alla lista, inizializza i parametri della struttura dati {\b block} e alloca lo spazio di memoria necessario. \par
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v find_block\:Server}
{\xe \v Server\:find_block}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b block}* Server::find_block ({\comment (startParameterList)}
int {\i id}){\f2  [private]}{\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAABV}
{\bkmkend AAAAAAAABV}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b block} * {\b find_block(int id)}: funzione privata che restituisce il blocco identificato da id. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
La funzione scorre la lista di blocchi e restituisce il puntatore al blocco che ha id come identificativo. Restituisce NULL se il blocco identificato da id non \'E8\'20presente in lista. \par
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v find_client\:Server}
{\xe \v Server\:find_client}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b client_list}* Server::find_client ({\comment (startParameterList)}
int {\i client_id}, {\comment (startParameterList)}
  {\b block} * {\i bk_elem}){\f2  [private]}{\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAABW}
{\bkmkend AAAAAAAABW}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b client_list} * {\b find_client(int client_id, block* bk_elem)}: funzione privata che restituisce il client identificato da client_id. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
La funzione scorre la lista di client appesa al blocco puntato da bk_elem e restituisce il puntatore al client che ha client_id come identificativo. Restituisce NULL se il client identificato da client_id non \'E8\'20presente in lista. \par
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v add_client\:Server}
{\xe \v Server\:add_client}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Server::add_client ({\comment (startParameterList)}
int {\i client_id}, {\comment (startParameterList)}
  {\b block} * {\i bk_elem}){\f2  [private]}{\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAABX}
{\bkmkend AAAAAAAABX}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
void {\b add_client(int client_id, block *bk_elem)}: funzione privata che crea e inserisce un nuovo client in lista. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
La funzione crea la lista di client effettuando l'inserimento di un nuovo elemento in testa alla lista e inizializza i parametri della struttura dati {\b client_list}. \par
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v delete_client\:Server}
{\xe \v Server\:delete_client}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Server::delete_client ({\comment (startParameterList)}
int {\i client_id}, {\comment (startParameterList)}
  {\b block} * {\i bk_elem}){\f2  [private]}{\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAABY}
{\bkmkend AAAAAAAABY}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
void {\b delete_client(int client_id, block *bk_elem)}: funzione privata che elimina un client dalla lista di client. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
La funzione scorre la lista di client appesa al blocco puntato da bk_elem, trova il client identificato da client_id e lo elimina dalla lista. \par
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v change_valid\:Server}
{\xe \v Server\:change_valid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Server::change_valid ({\comment (startParameterList)}
int {\i client_id}, {\comment (startParameterList)}
  {\b block} * {\i bk_elem}){\f2  [private]}{\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAABZ}
{\bkmkend AAAAAAAABZ}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
void {\b change_valid(int client_id, block *bk_elem)}: funzione privata che modifica la validit\'E0\'20della copia locale del blocco. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
La funzione scorre la lista di client appesa al blocco puntato da bk_elem, trova il client identificato da client_id e pone la variabile booleana valid relativa al client pari a 0 (copia locale invalida). \par
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v client_unblock\:Server}
{\xe \v Server\:client_unblock}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Server::client_unblock ({\comment (startParameterList)}
int {\i client_id}, {\comment (startParameterList)}
  {\b block} * {\i bk_elem}){\f2  [private]}{\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAACA}
{\bkmkend AAAAAAAACA}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
int {\b client_unblock(int client_id, block *bk_elem)}: funzione privata che sblocca la wait. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
La funzione scorre la lista di client appesa al blocco puntato da bk_elem, trova il client identificato da client_id e se questo risulta essere bloccato sulla wait (ovvero se ha la variabile booleana lock pari a 1), lo sblocca e resetta il booleano lock relativo al client a 0. \par
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v port_control\:Server}
{\xe \v Server\:port_control}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Server::port_control ({\comment (startParameterList)}
int {\i port}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAACB}
{\bkmkend AAAAAAAACB}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
int {\b port_control(int port)}: funzione pubblica che effettua il controllo sulla porta associata al server. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
La funzione effettua il controllo sulla porta associata al server per impedire l'utilizzo di porte destinate ad altri scopi. \par
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v read_config_file\:Server}
{\xe \v Server\:read_config_file}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Server::read_config_file ({\comment (startParameterList)}
const char * {\i config_file}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAACC}
{\bkmkend AAAAAAAACC}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b read_config_file(const char *config_file)}: funzione pubblica che legge il file di configurazione. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
La funzione legge il contenuto del file di configurazione, ne memorizza le righe, controlla indirizzo IP e porta, e in caso di corrispondenza richiama la add_block. \par
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v block_map\:Server}
{\xe \v Server\:block_map}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Server::block_map ({\comment (startParameterList)}
int {\i sk}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAACD}
{\bkmkend AAAAAAAACD}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
int {\b block_map(int sk)}: funzione pubblica che stabilisce l'associazione tra client e blocco. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
La funzione funzione riceve l'id del blocco interessato dal client identificato da sk, trova il blocco richiamando la find_block, stabilisce l'associazione blocco-client richiamando la add_client, invia il contenuto del blocco al client. Tutte le operazioni sul blocco sono effettuate in mutua esclusione. La funzione ritorna 1 in caso di successo e -1 in caso di errore. \par
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v block_unmap\:Server}
{\xe \v Server\:block_unmap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Server::block_unmap ({\comment (startParameterList)}
int {\i sk}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAACE}
{\bkmkend AAAAAAAACE}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
int {\b block_unmap(int sk)}: funzione pubblica che cancella l'associazione tra client e blocco. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
La funzione riceve l'id del blocco interessato dal client identificato da sk, trova il blocco richiamando la find_block, elimina l'associazione client-blocco richiamando la delete_client. Tutte le operazioni sul blocco sono effettuate in mutua esclusione. La funzione ritorna 1 in caso di successo e -1 in caso di errore. \par
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v block_update\:Server}
{\xe \v Server\:block_update}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Server::block_update ({\comment (startParameterList)}
int {\i sk}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAACF}
{\bkmkend AAAAAAAACF}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
int {\b block_update(int sk)}: funzione pubblica che invia il contenuto del blocco al client. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
La funzione riceve l'id del blocco interessato dal client identificato da sk, trova il blocco richiamando la find_block, trova il client assocciato al blocco richiamando la find_client, effettua un controllo sulla validit\'E0\'20della copia locale e manda il valore del booleano valid al client. Se la copia locale risulta ancora valida termina le operazioni, altrimenti manda il contenuto del blocco al client e segnala la copia locale come valida settando il valore della variabile booleana valid a 1. Tutte le operazioni sul blocco sono effettuate in mutua esclusione. La funzione ritorna 1 in caso di successo e -1 in caso di errore. \par
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v block_write\:Server}
{\xe \v Server\:block_write}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Server::block_write ({\comment (startParameterList)}
int {\i sk}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAACG}
{\bkmkend AAAAAAAACG}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
int {\b block_write(int sk)}: funzione pubblica che aggiorna il contenuto della copia globale del blocco con quello della copia locale. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
La funzione riceve l'id del blocco interessato dal client identificato da sk, trova il blocco richiamando la find_block, trova il client associato al blocco richiamando la find_client, effettua un controllo sulla validit\'E0\'20della copia locale e manda il valore della variabile booleana valid al client. Se la copia locale risulta invalida termina le operazioni, altrimenti aggiorna il contenuto della copia globale del blocco con quello della copia locale inviatagli dal client, rende la copia locale invalida richiamando la change_valid, invia al client il segnale di sbloccarsi sulla wait richiamando la client_unblock. Tutte le operazioni sul blocco sono effettuate in mutua esclusione. La funzione ritorna 1 in caso di successo e -1 in caso di errore. \par
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v block_wait\:Server}
{\xe \v Server\:block_wait}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Server::block_wait ({\comment (startParameterList)}
int {\i sk}){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAACH}
{\bkmkend AAAAAAAACH}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
int {\b block_wait(int sk)}: funzione pubblica che controlla la validit\'E0\'20della copia locale del blocco. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
La funzione riceve l'id del blocco interessato dal client identificato da sk, trova il blocco richiamando la find_block, trova il client associato al blocco richiamando la find_client, manda al client il valore della variabile booleana valid e se quest ultimo risulta pari a 1, setta la variabile booleana lock a 1 segnalando che il client \'E8\'20bloccato sulla wait. \par
}}
{\comment (rtfwriteRuler_thin)}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentazione dei campi{\comment endGroupHeader}
\par
\pard\plain 
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v head\:Server}
{\xe \v Server\:head}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b block}* {\b Server::head}{\f2  [private]}{\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAACI}
{\bkmkend AAAAAAAACI}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Puntatore alla testa della lista di blocchi. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\comment (rtfwriteRuler_thin)}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
La documentazione per questa classe \'E8\'20stata generata a partire dal seguente file:{\comment (startItemList level=0) }
{{\comment (writeListItem)}
{\comment (newParagraph)}
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b server.h}{\comment (newParagraph)}
\par
{\comment (endItemList level=1)}
}{\comment endFile}
{\comment end include classServer.rtf}
\par \pard\plain 

{\comment BeginRTFSection}
\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
{\comment begin include structserver__list.rtf}
{\comment startTitleHead}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Riferimenti per la struct server_list{\comment endTitleHead}
\par \pard\plain 
{\tc\tcl2 \v server_list}
{\xe \v server_list}
{\comment writeAnchor (structserver__list)}
{\bkmkstart AAAAAAAAAS}
{\bkmkend AAAAAAAAAS}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Struttura dati della lista di server: {\b server_list}. \par
}{\f2 #include <client_library.h>}{\comment (newParagraph)}
\par
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Campi{\comment endGroupHeader}
\par
\pard\plain 

{\comment (startMemberList) }
{
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b ip_add} [15]{\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (startMemberDescription)}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Indirizzo IP del server a cui si connette il client. \par
}{\comment (endMemberDescription)}
}}
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b port}{\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (startMemberDescription)}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Porta associata all'indirizzo IP. \par
}{\comment (endMemberDescription)}
}}
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b cl_sk}{\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (startMemberDescription)}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Descrittore del socket lato client. \par
}{\comment (endMemberDescription)}
}}
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b connected}{\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (startMemberDescription)}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Variabile per la gestione della connessione client-server. \par
}{\comment (endMemberDescription)}
}}
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b block_list} * {\b block_head}{\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (startMemberDescription)}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Puntatore alla testa della lista di blocchi associati ad ogni server. \par
}{\comment (endMemberDescription)}
}}
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b server_list} * {\b succ}{\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (startMemberDescription)}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Puntatore all'elemento successivo della lista di server a cui il client \'E8\'20connesso. \par
}{\comment (endMemberDescription)}
}}
{\comment (endMemberList) }
}
{\comment (rtfwriteRuler_thin)}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descrizione dettagliata{\comment endGroupHeader}
\par
\pard\plain 
{\comment startTextBlock}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Struttura dati della lista di server: {\b server_list}. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
La struttura dati contiene l'indirizzo IP del server a cui si connette il client, la porta associata all'indirizzo IP, il descrittore del socket lato client, la variabile booleana per la gestione della connessione client-server, il puntatore alla testa della lista di blocchi associati ad ogni server, il puntatore all'elemento successivo della lista dei server a cui il client si \'E8\'20connesso. \par
}{\comment endTextBlock}
}
{\comment (rtfwriteRuler_thin)}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentazione dei campi{\comment endGroupHeader}
\par
\pard\plain 
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v ip_add\:server_list}
{\xe \v server_list\:ip_add}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char {\b server_list::ip_add}[15]{\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAACJ}
{\bkmkend AAAAAAAACJ}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Indirizzo IP del server a cui si connette il client. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v port\:server_list}
{\xe \v server_list\:port}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b server_list::port}{\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAACK}
{\bkmkend AAAAAAAACK}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Porta associata all'indirizzo IP. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v cl_sk\:server_list}
{\xe \v server_list\:cl_sk}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b server_list::cl_sk}{\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAACL}
{\bkmkend AAAAAAAACL}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Descrittore del socket lato client. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v connected\:server_list}
{\xe \v server_list\:connected}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool {\b server_list::connected}{\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAACM}
{\bkmkend AAAAAAAACM}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Variabile per la gestione della connessione client-server. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v block_head\:server_list}
{\xe \v server_list\:block_head}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b block_list}* {\b server_list::block_head}{\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAACN}
{\bkmkend AAAAAAAACN}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Puntatore alla testa della lista di blocchi associati ad ogni server. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v succ\:server_list}
{\xe \v server_list\:succ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b server_list}* {\b server_list::succ}{\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAACO}
{\bkmkend AAAAAAAACO}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Puntatore all'elemento successivo della lista di server a cui il client \'E8\'20connesso. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\comment (rtfwriteRuler_thin)}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
La documentazione per questa struct \'E8\'20stata generata a partire dal seguente file:{\comment (startItemList level=0) }
{{\comment (writeListItem)}
{\comment (newParagraph)}
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b client_library.h}{\comment (newParagraph)}
\par
{\comment (endItemList level=1)}
}{\comment endFile}
{\comment end include structserver__list.rtf}

{\comment BeginRTFChapter}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Documentazione dei file{\tc \v Documentazione dei file}
\par \pard\plain 
{\comment begin include client__library_8h.rtf}
{\comment startTitleHead}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Riferimenti per il file client_library.h{\comment endTitleHead}
\par \pard\plain 
{\tc\tcl2 \v client_library.h}
{\xe \v client_library.h}
{\comment writeAnchor (client__library_8h)}
{\bkmkstart AAAAAAAAAA}
{\bkmkend AAAAAAAAAA}
{\comment startTextBlock}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <iostream>}{\comment (lineBreak)}
\par
{\f2 #include <fstream>}{\comment (lineBreak)}
\par
{\f2 #include <cstring>}{\comment (lineBreak)}
\par
{\f2 #include <stdlib.h>}{\comment (lineBreak)}
\par
{\f2 #include <sys/socket.h>}{\comment (lineBreak)}
\par
{\f2 #include <netinet/in.h>}{\comment (lineBreak)}
\par
{\f2 #include <arpa/inet.h>}{\comment (lineBreak)}
\par
{\f2 #include <strings.h>}{\comment (lineBreak)}
\par
{\f2 #include <pthread.h>}{\comment (lineBreak)}
\par
{\comment endTextBlock}
}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Strutture dati{\comment endGroupHeader}
\par
\pard\plain 

{\comment (startMemberList) }
{
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b block_list}{\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (startMemberDescription)}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Struttura dati del blocco di memoria: {\b block_list}. \par
}{\comment (endMemberDescription)}
}}
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b server_list}{\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (startMemberDescription)}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Struttura dati della lista di server: {\b server_list}. \par
}{\comment (endMemberDescription)}
}}
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Library}{\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (startMemberDescription)}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classe {\b Library}. \par
}{\comment (endMemberDescription)}
}}
{\comment (endMemberList) }
}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Definizioni{\comment endGroupHeader}
\par
\pard\plain 

{\comment (startMemberList) }
{
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BACKLOG}\~ 5{\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (startMemberDescription)}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Numero massimo di richieste di connessione che si possono accodare. \par
}{\comment (endMemberDescription)}
}}
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MAX_LINE_LEN}\~ 1024{\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (startMemberDescription)}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Lunghezza massima di ogni riga del file di configurazione. \par
}{\comment (endMemberDescription)}
}}
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DIMBLOCK}\~ 128*sizeof(char){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (startMemberDescription)}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Dimensione del blocco di memoria in bytes. \par
}{\comment (endMemberDescription)}
}}
{\comment (endMemberList) }
}
{\comment (rtfwriteRuler_thin)}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentazione delle definizioni{\comment endGroupHeader}
\par
\pard\plain 
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v BACKLOG\:client_library.h}
{\xe \v client_library.h\:BACKLOG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BACKLOG\~ 5{\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAAB}
{\bkmkend AAAAAAAAAB}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Numero massimo di richieste di connessione che si possono accodare. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v MAX_LINE_LEN\:client_library.h}
{\xe \v client_library.h\:MAX_LINE_LEN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MAX_LINE_LEN\~ 1024{\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAAC}
{\bkmkend AAAAAAAAAC}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Lunghezza massima di ogni riga del file di configurazione. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v DIMBLOCK\:client_library.h}
{\xe \v client_library.h\:DIMBLOCK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DIMBLOCK\~ 128*sizeof(char){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAAD}
{\bkmkend AAAAAAAAAD}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Dimensione del blocco di memoria in bytes. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\comment endFile}
{\comment end include client__library_8h.rtf}
\par \pard\plain 

{\comment BeginRTFSection}
\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
{\comment begin include server_8h.rtf}
{\comment startTitleHead}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Riferimenti per il file server.h{\comment endTitleHead}
\par \pard\plain 
{\tc\tcl2 \v server.h}
{\xe \v server.h}
{\comment writeAnchor (server_8h)}
{\bkmkstart AAAAAAAAAE}
{\bkmkend AAAAAAAAAE}
{\comment startTextBlock}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <iostream>}{\comment (lineBreak)}
\par
{\f2 #include <fstream>}{\comment (lineBreak)}
\par
{\f2 #include <cstring>}{\comment (lineBreak)}
\par
{\f2 #include <stdlib.h>}{\comment (lineBreak)}
\par
{\f2 #include <sys/socket.h>}{\comment (lineBreak)}
\par
{\f2 #include <netinet/in.h>}{\comment (lineBreak)}
\par
{\f2 #include <arpa/inet.h>}{\comment (lineBreak)}
\par
{\f2 #include <strings.h>}{\comment (lineBreak)}
\par
{\f2 #include <pthread.h>}{\comment (lineBreak)}
\par
{\comment endTextBlock}
}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Strutture dati{\comment endGroupHeader}
\par
\pard\plain 

{\comment (startMemberList) }
{
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b client_list}{\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (startMemberDescription)}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Struttura dati della lista di client associati al blocco: {\b client_list}. \par
}{\comment (endMemberDescription)}
}}
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b block}{\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (startMemberDescription)}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Struttura dati del blocco di memoria: {\b block}. \par
}{\comment (endMemberDescription)}
}}
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Server}{\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (startMemberDescription)}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classe {\b Server}. \par
}{\comment (endMemberDescription)}
}}
{\comment (endMemberList) }
}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Definizioni{\comment endGroupHeader}
\par
\pard\plain 

{\comment (startMemberList) }
{
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BACKLOG}\~ 5{\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (startMemberDescription)}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Numero massimo di richieste di connessione che si possono accodare. \par
}{\comment (endMemberDescription)}
}}
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MAX_LINE_LEN}\~ 1024{\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (startMemberDescription)}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Lunghezza massima di ogni riga del file di configurazione. \par
}{\comment (endMemberDescription)}
}}
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DIMBLOCK}\~ 128*sizeof(char){\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (startMemberDescription)}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Dimensione del blocco di memoria in bytes. \par
}{\comment (endMemberDescription)}
}}
{\comment (endMemberList) }
}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variabili{\comment endGroupHeader}
\par
\pard\plain 

{\comment (startMemberList) }
{
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b SERVER_IP_ADD}{\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (startMemberDescription)}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Indirizzo IP del server. \par
}{\comment (endMemberDescription)}
}}
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b SERVER_PORT}{\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (startMemberDescription)}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Porta associata all'indirizzo IP del server. \par
}{\comment (endMemberDescription)}
}}
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b config_file_path}{\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (startMemberDescription)}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Path del file di configurazione. \par
}{\comment (endMemberDescription)}
}}
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b line} [MAX_LINE_LEN]{\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (startMemberDescription)}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stringa di appoggio per il contenuto del file di configurazione. \par
}{\comment (endMemberDescription)}
}}
{\comment startMemberItem }
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
pthread_mutex_t {\b m_acc}{\comment endMemberItem }
{\comment (newParagraph)}
\par
{\comment (startMemberDescription)}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Semaforo di mutua esclusione. \par
}{\comment (endMemberDescription)}
}}
{\comment (endMemberList) }
}
{\comment (rtfwriteRuler_thin)}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentazione delle definizioni{\comment endGroupHeader}
\par
\pard\plain 
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v BACKLOG\:server.h}
{\xe \v server.h\:BACKLOG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BACKLOG\~ 5{\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAAF}
{\bkmkend AAAAAAAAAF}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Numero massimo di richieste di connessione che si possono accodare. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v MAX_LINE_LEN\:server.h}
{\xe \v server.h\:MAX_LINE_LEN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MAX_LINE_LEN\~ 1024{\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAAG}
{\bkmkend AAAAAAAAAG}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Lunghezza massima di ogni riga del file di configurazione. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v DIMBLOCK\:server.h}
{\xe \v server.h\:DIMBLOCK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DIMBLOCK\~ 128*sizeof(char){\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAAH}
{\bkmkend AAAAAAAAAH}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Dimensione del blocco di memoria in bytes. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\comment (rtfwriteRuler_thin)}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\comment startGroupHeader}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentazione delle variabili{\comment endGroupHeader}
\par
\pard\plain 
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v SERVER_IP_ADD\:server.h}
{\xe \v server.h\:SERVER_IP_ADD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char* {\b SERVER_IP_ADD}{\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAAI}
{\bkmkend AAAAAAAAAI}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Indirizzo IP del server. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v SERVER_PORT\:server.h}
{\xe \v server.h\:SERVER_PORT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b SERVER_PORT}{\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAAJ}
{\bkmkend AAAAAAAAAJ}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Porta associata all'indirizzo IP del server. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v config_file_path\:server.h}
{\xe \v server.h\:config_file_path}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char* {\b config_file_path}{\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAAK}
{\bkmkend AAAAAAAAAK}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Path del file di configurazione. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v line\:server.h}
{\xe \v server.h\:line}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char {\b line}[MAX_LINE_LEN]{\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAAL}
{\bkmkend AAAAAAAAAL}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stringa di appoggio per il contenuto del file di configurazione. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\comment startDoxyAnchor}
{\comment startMemberDoc}
{\xe \v m_acc\:server.h}
{\xe \v server.h\:m_acc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
pthread_mutex_t {\b m_acc}{\comment endMemberDoc}
}
}{\comment (newParagraph)}
\par
{\comment endDoxyAnchor}
{\bkmkstart AAAAAAAAAM}
{\bkmkend AAAAAAAAAM}
{\comment (startIndent) }
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Semaforo di mutua esclusione. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\comment endFile}
{\comment end include server_8h.rtf}

{\comment BeginRTFChapter}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Indice\par 
\pard\plain 
{\tc \v Indice}
{\field\fldedit {\*\fldinst INDEX \\c2 \\*MERGEFORMAT}{\fldrslt INDEX}}
{\comment endFile}
}